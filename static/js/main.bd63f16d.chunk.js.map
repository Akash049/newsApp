{"version":3,"sources":["components/CustomNavbar/CustomNavbar.jsx","components/NewsCards/NewsCards.jsx","components/NewsFolder/NewsFolder.jsx","App.js","serviceWorker.js","index.js"],"names":["CustomNavbar","react_default","a","createElement","className","Navbar","bg","expand","Component","NewsCards","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","openNewsPage","window","open","state","url","title","author","urlToImage","publishedAt","content","onClick","Image","style","maxHeight","maxWidth","alt","src","circle","Date","toDateString","NewsFolder","componentDidMount","axios","get","then","response","console","log","setState","allData","data","articles","newsData","prepareFilerArray","catch","error","sourceArray","push","forEach","item","source","name","handleTextSearch","event","searchVal","target","value","contentSearch","handleDropdownChange","toLowerCase","country","selectdSourse","newsCards","length","width","height","textAlgin","padding","fontSize","background","marginTop","marginLeft","borderRadius","news","index","NewsCards_NewsCards_NewsCards","key","indexOf","TextField_default","id","label","onChange","margin","App","CustomNavbar_CustomNavbar_CustomNavbar","NewsFolder_NewsFolder_NewsFolder","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bd63f16d.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { Navbar, Nav, Form, FormControl,Button ,NavDropdown} from 'react-bootstrap';\n// import {shoppingCart} from 'react-icons-kit/fa/shoppingCart'\nimport { Link } from 'react-router-dom';\nimport './CustomNavbar.css';\n\nexport default class CustomNavbar extends Component {\n  render() {\n    return (\n      <div className=\"navbar-space\">\n          <Navbar bg=\"light\" expand=\"lg\">\n              <div className=\"center-brand\">NewsBoard</div>\n          </Navbar>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport { Image} from 'react-bootstrap';\nimport './NewsCards.css';\n\nexport default class NewsCards extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      title : this.props.title,\n      author : this.props.author,\n      url : this.props.url,\n      urlToImage : this.props.urlToImage,\n      publishedAt : this.props.publishedAt,\n      content : this.props.content,\n    }\n  }\n\n\n  openNewsPage = () => {\n    window.open(this.state.url, '_blank')\n  }\n\n  render() {\n    return (\n      <div className=\"news-card-main\">\n          <div onClick={this.openNewsPage} className=\"news-title\">\n            {this.state.title}\n          </div>\n          <div className=\"news-body\">\n            <div className=\"news-image\" >\n            <Image style={{maxHeight:'100%', maxWidth:'100%'}} alt=\"Loading...\" src={this.state.urlToImage} circle className=\"app-logo\" />\n            </div>\n            <div className=\"news-content\">\n             {this.state.content}\n            </div>\n          </div>\n          <div className=\"news-events\">\n            <div className=\"news-author\">\n               {this.state.author}\n            </div>\n            <div className=\"news-date\">\n               { new Date(this.state.publishedAt).toDateString() }\n            </div>\n          </div>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport NewsCards from './../NewsCards/NewsCards.jsx'\nimport TextField from '@material-ui/core/TextField';\nimport Input from '@material-ui/core/Input';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Select from '@material-ui/core/Select';\nimport axios from 'axios';\nimport './NewsFolder.css'\n\nexport default class NewsFolder extends Component {\n\n  constructor(props){\n      super(props)\n        this.state = {\n            country : \"in\",\n            newsData : \"\",\n            allData : [],\n\n            //Arrays\n            sourceArray : [],\n            selectdSourse : \"All\",\n\n\n            //filter values\n            contentSearch : \"\",\n        }\n  } \n\n  componentDidMount = () => {\n      axios.get(\"https://newsapi.org/v2/top-headlines?country=in&apiKey=ccd90be7394a4a58ae369e5e9006a4d0\")\n      .then((response) => {\n        console.log(response)\n        this.setState({\n            allData : response.data.articles,\n            newsData : response.data.articles\n        }, () => {\n            this.prepareFilerArray();\n        })\n      })\n      .catch( error => {\n\n      })\n  }\n\n  prepareFilerArray = () => {\n    let sourceArray = [];\n    sourceArray.push(\"All\");\n    this.state.allData.forEach( (item)=> {\n        sourceArray.push( item.source.name );\n    })\n    this.setState({\n        sourceArray : sourceArray\n    })\n  }\n    \n  handleTextSearch = (event) => {\n    const searchVal = event.target.value;\n    this.setState({\n        contentSearch : searchVal\n    })\n  } \n\n  handleDropdownChange = (event) => {\n    const searchVal = (event.target.value).toLowerCase();\n  }\n  \n  render() {\n\n    let newsCards = [];\n\n    const menuStyle = {\n        fontSize : '1vw'\n    }\n\n    const selectStyle = {\n        width : \"100%\",\n        color : \"#000000\",\n        fontSize : '1.2vw',\n        textAlign : 'start'\n    }\n    const loaderBox = {\n        width:\"30%\",\n        height : \"5vw\",\n        textAlgin : \"center\",\n        padding : \"5%\",\n        fontSize : \"1.5vw\",\n        background : \"#fff\",\n        marginTop : \"10%\",\n        marginLeft : \"30%\",\n        borderRadius : \"5px\"\n    }\n\n    if( this.state.allData.length == 0 ){\n        newsCards =  <div style={loaderBox} >\n                            Loading news ...\n                     </div>  \n    }else{\n        if( this.state.contentSearch == \"\" || this.state.contentSearch == \" \" ){\n            this.state.allData.forEach((news, index)=>{\n                newsCards.push(\n                    <div className=\"news-cards-div\">\n                        <NewsCards\n                            key = {index}\n                            title = {news.title}\n                            author = {news.source.name}\n                            url = {news.url}\n                            urlToImage = {news.urlToImage}\n                            publishedAt = {news.publishedAt}\n                            content = {news.content}\n                        />\n                    </div>\n                )\n            })\n        }else{\n            const searchVal = (this.state.contentSearch).toLowerCase();\n            this.state.allData.forEach( (news, index)=>{\n                if( news.title.toLowerCase().indexOf( searchVal ) != -1 ){\n                    newsCards.push(\n                        <div className=\"news-cards-div\">\n                            <NewsCards\n                                key = {index}\n                                title = {news.title}\n                                author = {news.source.name}\n                                url = {news.url}\n                                urlToImage = {news.urlToImage}\n                                publishedAt = {news.publishedAt}\n                                content = {news.content}\n                            />\n                        </div>\n                    )\n                }\n            })\n\n        }\n    }\n    \n    return (\n      <div className=\"main news-body-main\">\n        <div className=\"filter-box-div\" >\n            <div className=\"filter-box-main\">\n                <div className=\"search-box-div\" >\n                    <TextField\n                        id=\"standard-name\"\n                        style={{width:\"100%\",marginTop:\"2%\"}}\n                        label=\"Search from content\"\n                        value={this.state.contentSearch}\n                        onChange={this.handleTextSearch}\n                        margin=\"normal\"\n                    />\n                    {/* <FormHelperText style={{fontSize:'0.9vw'}}>Search based on the content</FormHelperText> */}\n                </div>\n                <div className=\"dropdown-box-div\" >\n                    {/* <FormControl style={{fontSize:'0.9vw',width:\"100%\",marginTop:\"2%\"}} className=\"full-space\">\n                        <InputLabel style={{fontSize:'0.9vw',width:\"100%\"}} htmlFor=\"age-helper\">Select Source</InputLabel>\n                        <Select\n                            style={{width:\"100%\",marginTop:\"2%\"}}\n                            value={this.state.selectdSourse}\n                            onChange={ (event) => this.handleDropdownChange(event)}\n                            style={selectStyle}\n                            input={<Input/>}\n                        >\n                        <MenuItem style={menuStyle} value=\"Morning (8:00 a.m. - 12:00 p.m.)\">Morning (8:00 a.m. - 12:00 p.m.)</MenuItem>\n                        <MenuItem style={menuStyle} value=\"Afternoon (12:00 p.m. - 4:00 p.m.)\">Afternoon (12:00 p.m. - 4:00 p.m.)</MenuItem>\n                        <MenuItem style={menuStyle} value=\"Evening (4:00 p.m. - 8:00 p.m.)\">Evening (4:00 p.m. - 8:00 p.m.)</MenuItem>\n                        <MenuItem style={menuStyle} value=\"Night (8:00 p.m. - 12:00 a.m.)\">Night (8:00 p.m. - 12:00 a.m.)</MenuItem>\n                        </Select>\n                        <FormHelperText style={{fontSize:'0.9vw'}}>Choose the source for news</FormHelperText>\n                    </FormControl> */}\n                </div>\n            </div>\n        </div>\n        <div className=\"news-body-div\" >\n                {newsCards}\n        </div>\n            \n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport CustomNavbar from './components/CustomNavbar/CustomNavbar.jsx';\nimport NewsFolder from './components/NewsFolder/NewsFolder.jsx';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n\n    return (\n      <div className=\"App\">\n        <div className=\"navbar-section\">\n          <CustomNavbar />\n        </div>\n        <div className=\"pages\">\n            <NewsFolder/>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}